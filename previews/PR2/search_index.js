var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = PerfTest","category":"page"},{"location":"api/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"This is the official API reference of PerfTest. Note that it can also be queried interactively from the Julia REPL using the help mode:","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"julia> using PerfTest\njulia>?\nhelp?> PerfTest","category":"page"},{"location":"api/#[metrics](@ref)-type-and-basic-constructors","page":"API reference","title":"metrics type and basic constructors","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"metrics","category":"page"},{"location":"api/#PerfTest.metrics","page":"API reference","title":"PerfTest.metrics","text":"Metrics configuration \n\n\n\n\n\n","category":"constant"},{"location":"api/#[regression](@ref),-[suppress_output](@ref),-[save_folder](@ref)","page":"API reference","title":"regression, suppress_output, save_folder","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"regression\nsuppress_output\nsave_folder","category":"page"},{"location":"api/#PerfTest.regression","page":"API reference","title":"PerfTest.regression","text":"Regression testing configuration \n\n\n\n\n\n","category":"constant"},{"location":"api/#PerfTest.suppress_output","page":"API reference","title":"PerfTest.suppress_output","text":"Tested expressions output handling \n\n\n\n\n\n","category":"constant"},{"location":"api/#PerfTest.save_folder","page":"API reference","title":"PerfTest.save_folder","text":"Where the regression tests are saved \n\n\n\n\n\n","category":"constant"},{"location":"api/#Convenience-type-aliases-and-constructors","page":"API reference","title":"Convenience type aliases and constructors","text":"","category":"section"},{"location":"api/#Index","page":"API reference","title":"Index","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"PerfTest.retvalExpressionParser\nPerfTest.metaGet","category":"page"},{"location":"api/#Documentation","page":"API reference","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [PerfTest]\nOrder   = [:type]\nFilter = t -> typeof(t) !== Array","category":"page"},{"location":"api/#PerfTest.ASTRule","page":"API reference","title":"PerfTest.ASTRule","text":"Used by the tree traverser to check for expressions that match \"condition\",   if they do then \"modifier\" will be applied to the expression.\n\n\n\n\n\n","category":"type"},{"location":"api/#PerfTest.Context","page":"API reference","title":"PerfTest.Context","text":"Saves important state information when going through the AST of an expression.\n\n\n\n\n\n","category":"type"},{"location":"api/#PerfTest.EnvironmentFlags","page":"API reference","title":"PerfTest.EnvironmentFlags","text":"Saves data needed during one specific execution of the test generation process.\n\n\n\n\n\n","category":"type"},{"location":"api/#Functions-–-additional-to-standard-AbstractArray-functionality","page":"API reference","title":"Functions – additional to standard AbstractArray functionality","text":"","category":"section"},{"location":"api/#Index-2","page":"API reference","title":"Index","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Order = [:function]","category":"page"},{"location":"api/#Documentation-2","page":"API reference","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [PerfTest]\nOrder   = [:function]","category":"page"},{"location":"api/#PerfTest.configFallBack-Tuple{Any, Symbol}","page":"API reference","title":"PerfTest.configFallBack","text":"A little automatism to jump to defaults if the configuration provided is absent   Kind can be:        :regression\n\n\n\n\n\n","category":"method"},{"location":"api/#PerfTest.getNumber-Tuple{String}","page":"API reference","title":"PerfTest.getNumber","text":"WARNING, SUPPORTS ONLY 1 NUMBER PER LINE\n\n\n\n\n\n","category":"method"},{"location":"api/#PerfTest.metaGet-Tuple{AbstractVector, Symbol}","page":"API reference","title":"PerfTest.metaGet","text":"Runs over an array of expressions trying to match the desired one.   If not found returns \"Nothing\".\n\n\"sym\" should follow the MacroTools nomenclature for the @capture macro\n\n\n\n\n\n","category":"method"},{"location":"api/#PerfTest.retvalExpressionParser-Tuple{Expr}","page":"API reference","title":"PerfTest.retvalExpressionParser","text":"Checks for the return symbol\n\n\n\n\n\n","category":"method"},{"location":"api/#PerfTest.rooflineMacroParse-Tuple{Expr, PerfTest.Context}","page":"API reference","title":"PerfTest.rooflineMacroParse","text":"Parses roofline user request and sets up data for   roofline computation.\n\n\n\n\n\n","category":"method"},{"location":"usage/#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Have a look at the Examples and see the API reference for details on the usage of PerfTest.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"tip: Hint\nParallelStencil.jl enables straightforward working with CellArrays. It automatically allocates CellArray when the keyword arguments celldims or celltype are given to the architecture-agnostic allocation macros @zeros, @ones, @rand, @falses, @trues and @fill (refer to the documentation of ParallelStencil.jl for more details).","category":"page"},{"location":"usage/#Installation","page":"Usage","title":"Installation","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"PerfTest can be installed directly with the Julia package manager from the Julia REPL:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"julia>]\n  pkg> add PerfTest","category":"page"},{"location":"examples/#Examples","page":"...","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"...","title":"...","text":"Pages = [\"examples/memcopyCellArray3D.md\"]","category":"page"},{"location":"examples/","page":"...","title":"...","text":"Pages = [\"examples/memcopyCellArray3D_ParallelStencil.md\"]","category":"page"},{"location":"examples/memcopyCellArray3D_ParallelStencil/#Memory-copy-of-with-4x4-cells-using-[ParallelStencil.jl](https://github.com/omlins/ParallelStencil.jl)","page":"Memory copy of  with 4x4 cells using ParallelStencil.jl","title":"Memory copy of  with 4x4 cells using ParallelStencil.jl","text":"","category":"section"},{"location":"examples/memcopyCellArray3D_ParallelStencil/","page":"Memory copy of  with 4x4 cells using ParallelStencil.jl","title":"Memory copy of  with 4x4 cells using ParallelStencil.jl","text":"Main.mdinclude(joinpath(Main.EXAMPLEROOT, \"memcopyCellArray3D_ParallelStencil.jl\"))","category":"page"},{"location":"examples/memcopyCellArray3D_ParallelStencil/","page":"Memory copy of  with 4x4 cells using ParallelStencil.jl","title":"Memory copy of  with 4x4 cells using ParallelStencil.jl","text":"The corresponding file can be found ...","category":"page"},{"location":"examples/memcopyCellArray3D/#Memory-copy-of-with-4x4-SMatrix-cells","page":"Memory copy of  with 4x4 SMatrix cells","title":"Memory copy of  with 4x4 SMatrix cells","text":"","category":"section"},{"location":"examples/memcopyCellArray3D/","page":"Memory copy of  with 4x4 SMatrix cells","title":"Memory copy of  with 4x4 SMatrix cells","text":"Main.mdinclude(joinpath(Main.EXAMPLEROOT, \"memcopyCellArray3D.jl\"))","category":"page"},{"location":"examples/memcopyCellArray3D/","page":"Memory copy of  with 4x4 SMatrix cells","title":"Memory copy of  with 4x4 SMatrix cells","text":"The corresponding file can be found ...","category":"page"},{"location":"#[PerfTest.jl](https://github.com/JuliaPerf/PerfTest.jl)-[![Star-on-GitHub](https://img.shields.io/github/stars/JuliaPerf/PerfTest.jl.svg)](https://github.com/JuliaPerf/PerfTest.jl/stargazers)","page":"Introduction","title":"PerfTest.jl (Image: Star on GitHub)","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"The package PerfTest provides ...","category":"page"},{"location":"#Dependencies","page":"Introduction","title":"Dependencies","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"PerfTest relies on StaticArrays.jl, Adapt.jl and the Julia GPU packages CUDA.jl and AMDGPU.jl.","category":"page"},{"location":"#Contributors","page":"Introduction","title":"Contributors","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"This project has been developed as a Master's thesis by Daniel Sergio Vega Rodriguez. Thus, the contributors to this project have been so far:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Daniel Sergio Vega Rodriguez (@Dvegrod), Università della Svizzera italiana (USI): developer\nDr. Samuel Omlin (@omlins), Swiss National Supercomputing Centre (CSCS), ETH Zurich: original idea and Master's thesis superviser\nProf. Olaf Schenk, Università della Svizzera italiana (USI): Master's thesis superviser\nDr. Pasadakis Dimosthenis, Università della Svizzera italiana (USI): additional adviser","category":"page"}]
}
